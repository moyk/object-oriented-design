package hw.hw3;

import java.util.Arrays;
import java.util.Comparator;

public class DiningHall {
 private Comparator<CashRegister> cmp;
 private String comparemethod;
 private CashRegister[] registers = new CashRegister[2];
 private int total;
 private ItemDistribution id;

 public DiningHall(int normal, int fast, ItemDistribution id, String comparemethod) {
  this.id = id; // save this for later
  total = normal + fast; // for convenience
  registers = new CashRegister[total];
  this.comparemethod = comparemethod;
  
  for (int r=0; r<normal; r++)  // create normal speed
   registers[r] = new CashRegister(new NormalSpeed());
  for (int r=0; r<fast; r++)  // create high speed
   registers[r+normal] = new CashRegister(new Fast());
 }

 public void elapseOneSecond(int t) { // pretty much the same except that it now reads as many registers as there are
  if (aCustomerArrives()) {
   // The new customer goes into the smaller line.
   int chosenRegister = total-1;
   for (int r=0; r<total; r++) { // preferring fast registers
    chosenRegister = (registers[chosenRegister].size() < registers[r].size()) ? chosenRegister : r; 
   }
   registers[chosenRegister].addCustomer(t, id); // pass in ItemDistribution strategy
  }
  for (int r=0; r<total; r++)
   registers[r].elapseOneSecond(t);  // Simulate each register for one second.
 }

 public void printStatistics() {
  if (comparemethod.equals("w")){
    cmp = new CompareByWaitTime();
    Arrays.sort(registers, cmp);
   }
  if (comparemethod.equals( "s")){
    cmp = new CompareByCustsServed();
    Arrays.sort(registers, cmp);
  }
  for (int r=0; r<total; r++) {
   CashRegister reg = registers[r];
   System.out.println("Register " + r + " " + registers[r].cashier());
   System.out.println("\tNumber of arrivals = " + reg.customersServed());
   System.out.println("\tAverage wait time = " + reg.avgWaitTime());
  }
 }

 private boolean aCustomerArrives() {
  int n = (int) (Math.random() * 100);  // an integer between 0 and 99
  return n < 18;
 }
}